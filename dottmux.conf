#Variables
# color_light="white" #colour015
color_light="#aaaaaa" #colour015
color_dark="#31353f" #"colour232" # black= colour232
color_mark='#98C379'

unbind C-b
set -g prefix C-a
set -sg escape-time 0

unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

bind -n C-Up previous-window
bind -n C-Down next-window
bind -n C-K previous-window
bind -n C-J next-window

bind -n M-Left select-pane -L
bind -n M-Down select-pane -D
bind -n M-Up select-pane -U
bind -n M-Right select-pane -R
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R
bind -n M-H resize-pane -L 2
bind -n M-J resize-pane -D 2
bind -n M-K resize-pane -U 2
bind -n M-L resize-pane -R 2
# bind -n M-Left select-pane -L
# bind -n M-Down select-pane -D
# bind -n M-Up select-pane -U
# bind -n M-Right select-pane -R

# v and h are not bound by default, but we never know in the next versions...
# unbind v
# unbind h
# unbind % # Split vertically
# unbind '"' # Split horizontally
# bind v split-window -h -c "#{pane_current_path}"
# bind s split-window -v -c "#{pane_current_path}"
bind -n M-m split-window -v -c "#{pane_current_path}"
bind -n M-n split-window -h -c "#{pane_current_path}"

set -g mouse on

set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none

set -g default-terminal "xterm-256color"
set -g history-limit 100000

set -g base-index 1
set-window-option -g pane-base-index 1

set-window-option -g mode-keys vi

unbind -T copy-mode-vi Space; #Default for begin-selection
unbind -T copy-mode-vi Enter; #Default for copy-selection
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel --clipboard"

set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# set -g status-style 'bg=colour137 fg=colour18 dim'
# set -g status-style 'bg=colour0 fg=colour10 dim'
# set -g status-style 'bg=#abb2bf fg=colour0 dim'
# set -g status-style bg=color_dark,fg=#ffffff dim
set -g status-style bg=$color_dark,fg=$color_light
#31353F

# set-default colorset-option -ga terminal-overrides ",xterm-256color:Tc"
set-option -ga terminal-overrides ",xterm-256color:Tc"

bind -T root F12  \
  set prefix None \;\
  set key-table off \;\
  set status-style "fg=$color_light,bg=$color_dark" \;\
  set window-status-current-format "#[fg=$color_light,bg=$color_dark]$separator_powerline_right#[default]#I:#W* #[fg=$color_light,bg=$color_dark]$separator_powerline_right#[default]" \;\
  set window-status-current-style "fg=$color_light,bold,bg=$color_dark" \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S
  
# wg_is_keys_off="#[fg=$color_light,bg=$color_dark]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default]"
wg_is_keys_off="#[fg=$color_mark,bg=$color_dark]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'CONTROL DISABLED (F12)')#[fg=$color_light,bg=$color_dark]"

# set -g status-right "$wg_is_keys_off #{sysstat_cpu} | #{sysstat_mem} | #{sysstat_loadavg} | $wg_user_host"
set-option -g status on
set-option -g status-interval 1
# set-option -g status-justify centre
set-option -g status-keys vi
set-option -g status-position bottom
set-option -g status-style bg=$color_dark,fg=$color_light
set-option -g status-left-length 20
set-option -g status-left-style default
set-option -g status-left "#[fg=$color_light]#H | "
set-option -g status-right-length 140
set-option -g status-right-style default
# set-option -ag status-right "#[fg=red,dim,bg=default]#(uptime | cut -f 4-5 -d ' ' | cut -f 1 -d ',') "
set -g status-right "$wg_is_keys_off | #[fg=$color_light,bg=$color_dark]%H:%M | #[fg=$color_light]%Y-%m-%d"
# set -ag status-right "hi this is made by rasi"
# set-option -ag status-right " #[fg=$color_light,bg=$color_dark]%a%l:%M %p#[default] #[fg=$color_light]%Y-%m-%d"
set-window-option -g window-status-style fg=$color_light
set-window-option -g window-status-style bg=$color_dark
set-window-option -g window-status-current-style fg=$color_light
set-window-option -g window-status-current-style bg=$color_dark
